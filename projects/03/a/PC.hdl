// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:

    Not(in = reset , out = notreset);
    Not(in = load , out = notload);
    Not(in = inc , out = notinc);


    
    Mux16(a = true ,b = false ,sel = reset , out = temp1);


   
    And(a = notreset , b = load , out = sel2);
    Mux16(a = true , b = in , sel = sel2,out = temp2);


    And(a = notreset , b = notload , out = notresetAndnotload);
    And(a = notresetAndnotload , b = inc , out = sel3);
    Inc16(in = old , out = oldInc);
    Mux16(a = true , b = oldInc,sel = sel3, out = temp3);


    Or(a = reset , b = sel2 , out = asd);
    Or(a = asd , b = sel3 , out = nots4);
    Not(in = nots4 , out = sel4);

    Mux16(a = true , b = old,sel = sel4, out = temp4);

    And16(a = temp1 , b = temp2 , out = ans1);
    And16(a = temp3 , b = temp4 , out = ans2);
    And16(a = ans1 , b = ans2 , out = ans);



    Register(in = ans, load = true , out = old,out = out);
}
